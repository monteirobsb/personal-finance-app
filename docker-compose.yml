version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      # O Dockerfile já copia o código, então a montagem de volume aqui é
      # mais para desenvolvimento live-reload. Para produção, poderia ser removido
      # se a imagem for construída com o código final.
    env_file:
      - ./backend/.env # Carrega variáveis de ambiente do .env do backend

  frontend:
    build:
      context: ./frontend # Caminho para o diretório do frontend
      dockerfile: Dockerfile # Especifica o nome do Dockerfile
    ports:
      - "8081:80" # Mapeia a porta 80 do Nginx (dentro do container) para a 8081 no host
    # Volumes são removidos para este setup com Nginx servindo um build estático.
    # A imagem Docker já contém os arquivos construídos.
    # Para desenvolvimento com hot-reload, a abordagem seria diferente.
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: personalfinancedb

volumes:
  postgres_data:
